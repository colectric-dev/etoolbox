name: tox-pytest

on: [push, pull_request]

jobs:
  ci-test:
    name: ci-test (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.11", "3.12", "3.13"]
      fail-fast: false
    env:
      ETB_AZURE_SAS_TOKEN: ${{ secrets.ETB_AZURE_SAS_TOKEN }}
      ETB_AZURE_ACCOUNT_NAME: ${{ secrets.ETB_AZURE_ACCOUNT_NAME }}
    steps:
      # Setup to use Azure CLI for authentication with a service principal
      # https://github.com/Azure/login?tab=readme-ov-file#login-with-a-service-principal-secret
      - name: Azure CLI login
        if: ${{ env.ETB_AZURE_SAS_TOKEN == 'use_azure_cli'}}
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: true
      - name: Azure account info Ubuntu
        if: ${{ env.ETB_AZURE_SAS_TOKEN == 'use_azure_cli' && matrix.os == 'ubuntu-latest'}}
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
      - name: Azure account info Windows
        if: ${{ env.ETB_AZURE_SAS_TOKEN == 'use_azure_cli' && matrix.os == 'windows-latest'}}
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
            Get-AzContext

      - uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv tool install tox --with tox-uv

      - name: test with tox
        run: tox

      - name: build package
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13' }}
        run: uv build
      - name: upload package
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13' }}
        uses: actions/upload-artifact@v4
        with:
          name: etoolbox-packages
          path: dist/*

      - name: Coveralls
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.info

  finish:
    needs: ci-test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  collector:
    needs: [ci-test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: check for failures
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: echo job failed && exit 1
